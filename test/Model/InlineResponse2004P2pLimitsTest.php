<?php
/**
 * InlineResponse2004P2pLimitsTest
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  IdeaEngine\TezosSDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Tezos RPC
 *
 * Tezos client RPC API.
 *
 * The version of the OpenAPI document: 11.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace IdeaEngine\TezosSDK\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * InlineResponse2004P2pLimitsTest Class Doc Comment
 *
 * @category    Class
 * @description Network limits
 * @package     IdeaEngine\TezosSDK
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class InlineResponse2004P2pLimitsTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "InlineResponse2004P2pLimits"
     */
    public function testInlineResponse2004P2pLimits()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "connection_timeout"
     */
    public function testPropertyConnectionTimeout()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "authentication_timeout"
     */
    public function testPropertyAuthenticationTimeout()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "min_connections"
     */
    public function testPropertyMinConnections()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "expected_connections"
     */
    public function testPropertyExpectedConnections()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_connections"
     */
    public function testPropertyMaxConnections()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "backlog"
     */
    public function testPropertyBacklog()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_incoming_connections"
     */
    public function testPropertyMaxIncomingConnections()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_download_speed"
     */
    public function testPropertyMaxDownloadSpeed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_upload_speed"
     */
    public function testPropertyMaxUploadSpeed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "swap_linger"
     */
    public function testPropertySwapLinger()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "binary_chunks_size"
     */
    public function testPropertyBinaryChunksSize()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "read_buffer_size"
     */
    public function testPropertyReadBufferSize()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "read_queue_size"
     */
    public function testPropertyReadQueueSize()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "write_queue_size"
     */
    public function testPropertyWriteQueueSize()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoming_app_message_queue_size"
     */
    public function testPropertyIncomingAppMessageQueueSize()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoming_message_queue_size"
     */
    public function testPropertyIncomingMessageQueueSize()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "outgoing_message_queue_size"
     */
    public function testPropertyOutgoingMessageQueueSize()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_known_points"
     */
    public function testPropertyMaxKnownPoints()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "max_known_peer_ids"
     */
    public function testPropertyMaxKnownPeerIds()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "peer_greylist_size"
     */
    public function testPropertyPeerGreylistSize()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ip_greylist_size_in_kilobytes"
     */
    public function testPropertyIpGreylistSizeInKilobytes()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ip_greylist_cleanup_delay"
     */
    public function testPropertyIpGreylistCleanupDelay()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "greylist_timeout"
     */
    public function testPropertyGreylistTimeout()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "maintenance_idle_time"
     */
    public function testPropertyMaintenanceIdleTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
