<?php
/**
 * InlineResponse2009PeerMetadata
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  IdeaEngine\TezosSDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Tezos RPC
 *
 * Tezos client RPC API.
 *
 * The version of the OpenAPI document: 11.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace IdeaEngine\TezosSDK\Model;

use \ArrayAccess;
use \IdeaEngine\TezosSDK\ObjectSerializer;

/**
 * InlineResponse2009PeerMetadata Class Doc Comment
 *
 * @category Class
 * @package  IdeaEngine\TezosSDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class InlineResponse2009PeerMetadata implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'inline_response_200_9_peer_metadata';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'responses' => '\IdeaEngine\TezosSDK\Model\InlineResponse2009PeerMetadataResponses',
        'requests' => '\IdeaEngine\TezosSDK\Model\InlineResponse2009PeerMetadataRequests',
        'valid_blocks' => 'string',
        'old_heads' => 'string',
        'prevalidator_results' => '\IdeaEngine\TezosSDK\Model\InlineResponse2009PeerMetadataPrevalidatorResults',
        'unactivated_chains' => 'string',
        'inactive_chains' => 'string',
        'future_blocks_advertised' => 'string',
        'unadvertised' => '\IdeaEngine\TezosSDK\Model\InlineResponse2009PeerMetadataUnadvertised',
        'advertisements' => '\IdeaEngine\TezosSDK\Model\InlineResponse2009PeerMetadataAdvertisements'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'responses' => null,
        'requests' => null,
        'valid_blocks' => null,
        'old_heads' => null,
        'prevalidator_results' => null,
        'unactivated_chains' => null,
        'inactive_chains' => null,
        'future_blocks_advertised' => null,
        'unadvertised' => null,
        'advertisements' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'responses' => 'responses',
        'requests' => 'requests',
        'valid_blocks' => 'valid_blocks',
        'old_heads' => 'old_heads',
        'prevalidator_results' => 'prevalidator_results',
        'unactivated_chains' => 'unactivated_chains',
        'inactive_chains' => 'inactive_chains',
        'future_blocks_advertised' => 'future_blocks_advertised',
        'unadvertised' => 'unadvertised',
        'advertisements' => 'advertisements'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'responses' => 'setResponses',
        'requests' => 'setRequests',
        'valid_blocks' => 'setValidBlocks',
        'old_heads' => 'setOldHeads',
        'prevalidator_results' => 'setPrevalidatorResults',
        'unactivated_chains' => 'setUnactivatedChains',
        'inactive_chains' => 'setInactiveChains',
        'future_blocks_advertised' => 'setFutureBlocksAdvertised',
        'unadvertised' => 'setUnadvertised',
        'advertisements' => 'setAdvertisements'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'responses' => 'getResponses',
        'requests' => 'getRequests',
        'valid_blocks' => 'getValidBlocks',
        'old_heads' => 'getOldHeads',
        'prevalidator_results' => 'getPrevalidatorResults',
        'unactivated_chains' => 'getUnactivatedChains',
        'inactive_chains' => 'getInactiveChains',
        'future_blocks_advertised' => 'getFutureBlocksAdvertised',
        'unadvertised' => 'getUnadvertised',
        'advertisements' => 'getAdvertisements'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['responses'] = $data['responses'] ?? null;
        $this->container['requests'] = $data['requests'] ?? null;
        $this->container['valid_blocks'] = $data['valid_blocks'] ?? null;
        $this->container['old_heads'] = $data['old_heads'] ?? null;
        $this->container['prevalidator_results'] = $data['prevalidator_results'] ?? null;
        $this->container['unactivated_chains'] = $data['unactivated_chains'] ?? null;
        $this->container['inactive_chains'] = $data['inactive_chains'] ?? null;
        $this->container['future_blocks_advertised'] = $data['future_blocks_advertised'] ?? null;
        $this->container['unadvertised'] = $data['unadvertised'] ?? null;
        $this->container['advertisements'] = $data['advertisements'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['responses'] === null) {
            $invalidProperties[] = "'responses' can't be null";
        }
        if ($this->container['requests'] === null) {
            $invalidProperties[] = "'requests' can't be null";
        }
        if ($this->container['valid_blocks'] === null) {
            $invalidProperties[] = "'valid_blocks' can't be null";
        }
        if ($this->container['old_heads'] === null) {
            $invalidProperties[] = "'old_heads' can't be null";
        }
        if ($this->container['prevalidator_results'] === null) {
            $invalidProperties[] = "'prevalidator_results' can't be null";
        }
        if ($this->container['unactivated_chains'] === null) {
            $invalidProperties[] = "'unactivated_chains' can't be null";
        }
        if ($this->container['inactive_chains'] === null) {
            $invalidProperties[] = "'inactive_chains' can't be null";
        }
        if ($this->container['future_blocks_advertised'] === null) {
            $invalidProperties[] = "'future_blocks_advertised' can't be null";
        }
        if ($this->container['unadvertised'] === null) {
            $invalidProperties[] = "'unadvertised' can't be null";
        }
        if ($this->container['advertisements'] === null) {
            $invalidProperties[] = "'advertisements' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets responses
     *
     * @return \IdeaEngine\TezosSDK\Model\InlineResponse2009PeerMetadataResponses
     */
    public function getResponses()
    {
        return $this->container['responses'];
    }

    /**
     * Sets responses
     *
     * @param \IdeaEngine\TezosSDK\Model\InlineResponse2009PeerMetadataResponses $responses responses
     *
     * @return self
     */
    public function setResponses($responses)
    {
        $this->container['responses'] = $responses;

        return $this;
    }

    /**
     * Gets requests
     *
     * @return \IdeaEngine\TezosSDK\Model\InlineResponse2009PeerMetadataRequests
     */
    public function getRequests()
    {
        return $this->container['requests'];
    }

    /**
     * Sets requests
     *
     * @param \IdeaEngine\TezosSDK\Model\InlineResponse2009PeerMetadataRequests $requests requests
     *
     * @return self
     */
    public function setRequests($requests)
    {
        $this->container['requests'] = $requests;

        return $this;
    }

    /**
     * Gets valid_blocks
     *
     * @return string
     */
    public function getValidBlocks()
    {
        return $this->container['valid_blocks'];
    }

    /**
     * Sets valid_blocks
     *
     * @param string $valid_blocks Decimal representation of a big number
     *
     * @return self
     */
    public function setValidBlocks($valid_blocks)
    {
        $this->container['valid_blocks'] = $valid_blocks;

        return $this;
    }

    /**
     * Gets old_heads
     *
     * @return string
     */
    public function getOldHeads()
    {
        return $this->container['old_heads'];
    }

    /**
     * Sets old_heads
     *
     * @param string $old_heads Decimal representation of a big number
     *
     * @return self
     */
    public function setOldHeads($old_heads)
    {
        $this->container['old_heads'] = $old_heads;

        return $this;
    }

    /**
     * Gets prevalidator_results
     *
     * @return \IdeaEngine\TezosSDK\Model\InlineResponse2009PeerMetadataPrevalidatorResults
     */
    public function getPrevalidatorResults()
    {
        return $this->container['prevalidator_results'];
    }

    /**
     * Sets prevalidator_results
     *
     * @param \IdeaEngine\TezosSDK\Model\InlineResponse2009PeerMetadataPrevalidatorResults $prevalidator_results prevalidator_results
     *
     * @return self
     */
    public function setPrevalidatorResults($prevalidator_results)
    {
        $this->container['prevalidator_results'] = $prevalidator_results;

        return $this;
    }

    /**
     * Gets unactivated_chains
     *
     * @return string
     */
    public function getUnactivatedChains()
    {
        return $this->container['unactivated_chains'];
    }

    /**
     * Sets unactivated_chains
     *
     * @param string $unactivated_chains Decimal representation of a big number
     *
     * @return self
     */
    public function setUnactivatedChains($unactivated_chains)
    {
        $this->container['unactivated_chains'] = $unactivated_chains;

        return $this;
    }

    /**
     * Gets inactive_chains
     *
     * @return string
     */
    public function getInactiveChains()
    {
        return $this->container['inactive_chains'];
    }

    /**
     * Sets inactive_chains
     *
     * @param string $inactive_chains Decimal representation of a big number
     *
     * @return self
     */
    public function setInactiveChains($inactive_chains)
    {
        $this->container['inactive_chains'] = $inactive_chains;

        return $this;
    }

    /**
     * Gets future_blocks_advertised
     *
     * @return string
     */
    public function getFutureBlocksAdvertised()
    {
        return $this->container['future_blocks_advertised'];
    }

    /**
     * Sets future_blocks_advertised
     *
     * @param string $future_blocks_advertised Decimal representation of a big number
     *
     * @return self
     */
    public function setFutureBlocksAdvertised($future_blocks_advertised)
    {
        $this->container['future_blocks_advertised'] = $future_blocks_advertised;

        return $this;
    }

    /**
     * Gets unadvertised
     *
     * @return \IdeaEngine\TezosSDK\Model\InlineResponse2009PeerMetadataUnadvertised
     */
    public function getUnadvertised()
    {
        return $this->container['unadvertised'];
    }

    /**
     * Sets unadvertised
     *
     * @param \IdeaEngine\TezosSDK\Model\InlineResponse2009PeerMetadataUnadvertised $unadvertised unadvertised
     *
     * @return self
     */
    public function setUnadvertised($unadvertised)
    {
        $this->container['unadvertised'] = $unadvertised;

        return $this;
    }

    /**
     * Gets advertisements
     *
     * @return \IdeaEngine\TezosSDK\Model\InlineResponse2009PeerMetadataAdvertisements
     */
    public function getAdvertisements()
    {
        return $this->container['advertisements'];
    }

    /**
     * Sets advertisements
     *
     * @param \IdeaEngine\TezosSDK\Model\InlineResponse2009PeerMetadataAdvertisements $advertisements advertisements
     *
     * @return self
     */
    public function setAdvertisements($advertisements)
    {
        $this->container['advertisements'] = $advertisements;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


